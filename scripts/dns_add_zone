#!/usr/bin/python3
import sys
import os
import logging
from lib import print_info, print_error, get_log_location, LOGGING_FORMAT

def empty_zone(zone_name):
    return """
$TLL 60480
@   IN  SOA %s webmaster.ucll.be (
                   1    ; Serial
              604800    ; Refresh
               86400    ; Retry
             2419200    ; Expire
                8640 )  ; Negative cache ttl
    IN  NS  ns1.uclllabs.be
    IN  NS  ns2.uclllabs.be
    IN  A   193.191.177.180

    """ % (zone_name)

def add_zone(zone_name, zone_content):
    zone_file_location = "/etc/bind/zones/db." + zone_name

    exists = os.path.isfile(zone_file_location)
    if exists:
        print_error("Cannot create allready exisiting zone")
    with open(zone_file_location, "w+") as file:
        file.write(zone_content + "\n")
        return zone_file_location

def add_to_named(zone_name, zone_file_location):
    with open("/etc/bind/named.conf.local", "a") as file:
        content = """
zone %s {
    type master;
    notify yes;
    file "%s"
};
        """ % (zone_name, zone_file_location)
        logger.debug("Writing '%s' to %s" % (content, zone_file_location))
        file.write(content)


if __name__ == '__main__':
    # Setup logging
    logging.basicConfig(level=logging.DEBUG, filename=get_log_location("dns_add_zone"),
                        format=LOGGING_FORMAT, filemode="a+")
    args = sys.argv

    logging.debug("Command issued: " + " ".join(args))

    # Don't need the name of the script
    args.pop(0)
    try:
        zone_name = args[0]
    except IndexError:
        print_error("Please enter a zone")


    zone_content = empty_zone(zone_name)
    zone_file_location = add_zone(zone_name, zone_content)
    add_to_named(zone_name, zone_file_location)
    os.system("systemctl restart bind9")
